本文所设计的金融问答系统，主要包括三个部分，首先是金融知识图谱的构建，利用爬虫脚本从开放的金融类网站中获取所需数据，保存在csv文件中，
通过 python 程序从csv文件中进行知识抽取，表示成三元组的形式，并建立知识图谱的节点和边，
最后将形成的知识图谱利用py2neo工具将数据导入到neo4j图数据库中。其次在问答系统的算法设计上，
使用 jiaba分词工具对问句进行分词，并根据训练的文本分类模型对问句分类，根据分类结果是否属于金融领域问题来调用设定好的模板进行匹配
最后在问答系统的web端搭建上，前端使用Vue3，Element-plus，后台使用Django框架。


5.1 需求分析
  5.1.1 背景需求
  随着大数据技术的发展，互联网信息以几何级数爆炸式增长，对用户快速精准的获取所需数据带来了巨大的困难。对现有的搜索引擎而言，用户通过输入框键入问题，返回结果往往不尽如人意，大部分不会给出明确答案，而是返回一些冗余的相关链接或相关程度很低的无用信息，虽然在某种程度上能够满足用户的信息搜索需求，但仍需要花费一定精力进行结果筛选，使得用户体验大打折扣。为了用户在大量杂乱无章的冗余信息中，精准快速的检索到自己想要的结果，提高用户体验度，问答系统作为搜索引擎的升级版应际而生。
当下，脱贫攻坚全面取得胜利，我国经济实力持续增长，许多家庭对金融投资、金融理财等证券类业务越发重视，将证券类知识和问答系统结合是大势所趋。
基于机器学习与模板匹配的金融问答系统具有高效的问题理解能力，针对用户问题能够返回较为准确的结果，能够减少用广的检索时间，提高检索效率和用广满意度。

  5.1.2 功能需求
  根据系统背景需求，系统需要实现以下功能
  （1）交互界面与接口
     前端页面为用户提供一个问答文本输入框，引导用户输入向咨询的证券类产品相关问题，并提供发送请求功能，将用户的问题文本发送给后端进行处理。
     后端提供处理请求的接口，将收到的问题文本进行处理，通过设计的问答算法进行处理，并将最终结果返回给前端进行渲染。
  （2）知识图谱问答
    当用户提出问题经过问题处理后，利用分类模型，当所询问的问题被分类为金融领域问题，首先会根据设定好的模板对问题进行匹配，每个模板会对应一个cypher查询模板，将识别的实体信息填入cypher语句中进行知识图谱的检索，对答案进行拼接，完成知识图谱问答功能。
  （3）问答系统兜底
    当用户所问为非专业问题，或者时专业问题模板无法匹配成功时，则会以闲聊和安全回答进行回复。用户进行闲聊式询问，则需提供闲聊服务。问答系统对用户的问题无法回答时，需弹出安全回答。
  （4）服务反馈
    用户完成问答服务后，可以对本次的问答服务的满意度做综合打分，对每次的系统服务进行评价，并可以对问答系统存在的问题进行记录，也可以填写改进的建议。

5.2 运行环境
  本文问答系统的运行环境如表所示
   （表格）
5.3 系统开发相关技术
  知识库是问答系统的基础也是关键，对于知识库的构建首先需要数据的收集，本文使用利用Python编程语言完成数据收集与清洗工作，将三元组数据存储图数据库Neo4j中。采用Pytorch进行模型开发和训练，使用开源代码框架Django通过Python进行后端开发，并使用Vue3开发前端页面。
  (1)JieBa
  JieBa是一款强大的中文分词工具，结合了基于规则和基于统计这两类方法，同时支持支持三种分词模式：精确模式，全模式，搜索引擎模式，支持繁体分词，支持自定义词典，MIT 授权协议
  (2)Vue.js
  Vue.js是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。
  (4)Neo4j
  Neo4j是一款非关系型图数据库，其存储结构和有向图相似，由结点和与节点连接的关系为基本存储内容，由于没有传统的表结构，其最大的特点是扩展性好，适合存储半结构化数据，可以为用户提供关系数据存储。被广泛应用于社交网络、智能推荐引擎、知识图谱等。能够为用户提供数据处理、数据可视化、知识检索等操作。
  (5)Django
  Django是一款开源代码框架，它由Python编写，用于开发web应用，编程人员只需要开发少量的代码，就可以实现后台管理。Django采用MTV设计模式，其发展于传统的MVC设计模式，为了避免开发过程中引入过于复杂的SQL语句，它把数据库表抽象成Python类，将用户对数据库表的操作转化为对Python 类的操作。
  

5.4 系统实现
  5.3.1 系统总体设计
 （ 框架图）

  5.3.2 问答模块
  问答模块是本文证券类问答系统的核心，这一模块主要包括问答流程的所有算法、处理逻辑、为前端提供的API接口。主要有问句领域分类，问句类型分类，问句解析，答案搜索，答案组装，以及对图数据库neo4j的查询，对sqlite3数据库的增删改查。

  5.3.3 数据模块
  数据模块为证券类问答系统提供数据支撑，主要包括数据的获取，清洗与存储；将数据转为三元组形式存储到neo4j图数据库中，用于答案搜索；将管理员信息、用户评论等信息存储sqlite3关系型数据库中，用于维护和可视化。

  5.3.4 交互模块
  交互模块主要用于实现系统和使用者的交互，主要包括首页界面，用于展示问答系统何后台管理入口；问答交互界面，用户可以以对话形式询问问题并得到答案，同时用户可以填写使用反馈与点击左侧帮助菜单，另外，本文对该页面增加了趣味性体验，比如鼠标悬浮头像上，头像可以旋转；
  
  5.3.5 管理模块
  管理模块为系统开发者维护和改进系统提供支持，主要包括管理员页面，查看和管理用户评论，便于针对用户的反馈对系统进行完善与升级。

5.5 系统演示和测试
    5.4.1 演示
    证券类问答系统首页界面如下图所示，主要包括证券助手（对话交互界面）与后台管理入口。点击证券助手，则可以进入对话交互界面；点击后台管理，则弹出管理员账号密码输入框。
    对话交互界面如下图所示，主要包括了聊天框，发送按钮，左侧菜单栏，以及用户评论框。
      用户可以在聊天输入框中输入问题，并点击发送按钮，该问题会被后台进行问句领域分类，基于规则匹配解析，将解析到的信息填充到对应的cypher模板槽位中，根据图数据库进行答案搜索，最后将答案进行组合，返回给前端。
      以下为输入不同问题的的效果图：
      （1）用户输入非金融领域问题时，比如输入"你平时喜欢打什么游戏"，根据问答模块的处理，该问句被被分类为游戏领域，则返回提前定义好的回答模板，结果如下图
       (2) 用户输入证券类领域问题，本系统支持的问题类型已在第四章进行了说明，比如输入"张凯管理了哪些基金"，“张凯是谁”，“xx基金所属公司是那家”，结果如下图所示
       (3) 用户输入证券类领域问题，但系统不支持该问题类型或者知识图谱中并未存储相关信息时，会返回安全回复，比如“”,结果如下图所示“
      用户可以点击左侧的菜单栏，比如点击用户评论，将会弹出用户评论框，用户可以在输入框填写建议，并提交，如下图所示：
    后台管理界面如下图所示，主要包括了用户评论可视化，用户评论删除按钮，如下图所示：


    5.4.2 测试
     为了验证该证券类问答系统的实际使用效果，本文从功能、性能、以及使用体验上对该系统进行了测试。
     1.功能测试
      本文主要针对系统的核心功能进行测试，包括首页展示，问句输入，答案显示，填写评论，评论管理，通过校验各部分功能的实际运行效果与预期效果，得到以下测试结果表：
      （表）
      由测试结果所示，本文所构建的问答系统核心功能运行效果都符合预期，可供用户和管理员正常使用。
    2.性能测试
      为了测试系统在问题回答上的稳定性与可靠性，本文根据所设模板随机生成了100条问题，并通过人工在图数据库中检索其正确答案，再将问题输入给系统，将其返回结果与人工检索的答案进行判断。
      测试结果如下表:

      由测试结果所示，本文的系统准确率达到92%，可以满足用户的使用要求。

