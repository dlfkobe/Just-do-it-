本文所设计的金融问答系统，主要包括三个部分，首先是金融知识图谱的构建，利用爬虫脚本从开放的金融类网站中获取所需数据，保存在csv文件中，
通过 python 程序从csv文件中进行知识抽取，表示成三元组的形式，并建立知识图谱的节点和边，
最后将形成的知识图谱利用py2neo工具将数据导入到neo4j图数据库中。其次在问答系统的算法设计上，
使用 jiaba分词工具对问句进行分词，并根据训练的文本分类模型对问句分类，根据分类结果是否属于金融领域问题来调用设定好的模板进行匹配
最后在问答系统的web端搭建上，前端使用Vue3，Element-plus，后台使用Django框架。


5.1 需求分析
  5.1.1 背景需求
  随着大数据技术的发展，互联网信息以几何级数爆炸式增长，对用户快速精准的获取所需数据带来了巨大的困难。对现有的搜索引擎而言，用户通过输入框键入问题，返回结果往往不尽如人意，大部分不会给出明确答案，而是返回一些冗余的相关链接或相关程度很低的无用信息，虽然在某种程度上能够满足用户的信息搜索需求，但仍需要花费一定精力进行结果筛选，使得用户体验大打折扣。为了用户在大量杂乱无章的冗余信息中，精准快速的检索到自己想要的结果，提高用户体验度，问答系统作为搜索引擎的升级版应际而生。
当下，脱贫攻坚全面取得胜利，我国经济实力持续增长，许多家庭对金融投资、金融理财等证券类业务越发重视，将证券类知识和问答系统结合是大势所趋。
基于机器学习与模板匹配的金融问答系统具有高效的问题理解能力，针对用户问题能够返回较为准确的结果，能够减少用广的检索时间，提高检索效率和用广满意度。

  5.1.2 功能需求
  （1）知识图谱问答
当用户提出问题经过问题处理后，利用分类模型，当所询问的问题被分类为专业问题，首先会对问题首先进行实体识别，然后进行意图识别，对识别后的结果打标签，每个标签类型会对应一个cypher查询模板，将识别的实体信息填入cypher语句中进行知识图谱的检索，对答案进行拼接，完成知识图谱问答功能。
（2）常见问题问答
常见问题问答是基于常见问题问答库的，用户问题经过纠错、符号处理后，当问题同样被分类为专业问题，常见问题问答模块会对用户问题进行关键字抽
取，基于模板对问题进行匹配，然后通过组合cpyher查询语句，在图数据库中进行查询得到最终答案。
（3）问答系统兜底
当用户所问为非专业问题，则会以闲聊和安全回答进行回复。用户进行闲聊式询问，则需提供闲聊服务。问答系统对用户的问题无法回答时，需弹出安全回答。
（4）服务评价
用户完成问答服务后，会被要求对本次的问答服务的满意度做综合打分，对每次的系统服务进行评价，并可以对问答系统存在的问题进行记录，也可以填写改进的建议。

5.2 运行环境
   （表格）
5.3 系统开发相关技术

5.4 系统实现
  5.3.1 系统总体设计
 （ 框架图）
  5.3.2 逻辑层实现
  逻辑层是整个问答系统的关键之处，这一模块主要包括问答流程的所有算法，为前端展示模块提供对外服务API接口。首先根据生成的问句语料库对命名实体模型和朴素贝叶斯模型进行训练，保存模型。接着对用户提出的问句进行语义解析，得到关键信息和查询模板，映射到知识图谱中。最后在知识图谱中进行查询，将答案返回给用户。

  5.3.3 数据层实现
  数据模块为金融问答系统提供数据支撑，主要包括存储在neo4j图数据库中的知识图谱，用于答案查询；利用知识图谱中的数据生成问句语料库，用于命名实体识别和问句分类；自定义实体库，用于分词和相似度计算。

  5.3.4 前端展示层实现
  前端展示模块主要用于实现系统和用户的交互，系统界面如图5.2所示。系统问答过程如下：用户首先打开问答系统首页，然后在输入框中输入问题并点击"答案查询"按钮提交问答申请，通过Post方式将申请提交给后端；后端先获取到用户所提问题，再将问题反馈给问答模块，从而得出答案；最后将得到的答案返回给前端展示模块。

5.5 系统演示和测试
    5.4.1 演示
    5.4.2 测试
